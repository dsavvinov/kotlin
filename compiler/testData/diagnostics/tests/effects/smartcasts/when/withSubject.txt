package

public fun elseWithNullableResult(/*0*/ x: kotlin.Any?): kotlin.Unit
public fun exhaustive(/*0*/ x: kotlin.Any?): kotlin.Unit
public fun exhaustiveWithNullableResult(/*0*/ x: kotlin.Any?): kotlin.Unit
@kotlin.internal.Returns(value = ConstantValue.TRUE) public fun isString(/*0*/ @kotlin.internal.IsInstance(klass = kotlin.String::class) x: kotlin.Any?): kotlin.Boolean
@kotlin.internal.Returns(value = ConstantValue.TRUE) public fun safeIsString(/*0*/ @kotlin.internal.IsInstance(klass = kotlin.String::class) x: kotlin.Any?): kotlin.Boolean?
public fun smartcastInElse(/*0*/ x: kotlin.Any?): kotlin.Unit
